#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

#Область ВзаимодействиеСYellowCollector

// Получить данные для основной таблицы ошибок.
// 
// Возвращаемое значение:
//  Соответствие, Структура - Получить данные для основной таблицы ошибок
Функция ПолучитьЗаголовкиВсехОтчетовОбОшибках() Экспорт 
	Возврат YellowCollectorЗапросы.ПолучитьЗаголовкиВсехОтчетовОбОшибкахПоПараметрам();
КонецФункции

Функция ПолучитьДетальнуюИнформациюОтчетаОбОшибке(ИД) Экспорт
	Возврат YellowCollectorЗапросы.ПолучитьДеталиОтчетаОбОшибкеПоИД(ИД);
КонецФункции

#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

   
#Область ПреобразованиеJSON

//             &НаСервере
//Функция СформироватьПодстрокиДерева(ИтераторИзJson, ТекущаяСтрокаДерева, ИндексЭлементаМассива = 0)
//    Для каждого Элемент из ИтераторИзJson цикл    
//        ДочерняяСтрокаДерева=ТекущаяСтрокаДерева.Строки.Добавить();
//        //у типа итератора только два варианта: массив или соответствие
//        Если ТипЗнч(ИтераторИзJson) = Тип("Массив") Тогда 
//            ДочерняяСтрокаДерева.Ключ = "[" + ИндексЭлементаМассива + "]";
//            ИндексЭлементаМассива = ИндексЭлементаМассива + 1;
//            Значение = Элемент;//элементы массива: примитивы, соответствия, массивы
//        Иначе //итератор - соответствие, элементы - ключ и значение
//            ДочерняяСтрокаДерева.Ключ = Элемент.Ключ;
//            Значение = Элемент.Значение;//значения: примитивы, соответствия, массивы
//        КонецЕсли;
//        Если ТипЗнч(Значение)=Тип("Соответствие") Тогда
//            ДочерняяСтрокаДерева.Значение="{" + Значение.Количество() +"}";
//            ДочерняяСтрокаДерева.Тип = "Запись";
//            СформироватьПодстрокиДерева(Значение, ДочерняяСтрокаДерева);
//        ИначеЕсли ТипЗнч(Значение)=Тип("Массив") Тогда
//            ДочерняяСтрокаДерева.Значение="[" + Значение.Количество() + "]";
//            ДочерняяСтрокаДерева.Тип = "Массив";
//            СформироватьПодстрокиДерева(Значение, ДочерняяСтрокаДерева);
//        Иначе //примитив
//            ДочерняяСтрокаДерева.Значение=Значение;
//            ДочерняяСтрокаДерева.Тип = ТипЗнч(Значение);
//        КонецЕсли;
//    КонецЦикла;
//КонецФункции

//&НаСервере
//Процедура ЗаполнитьДеревоЖсон()
//    ЧтениеЖсон = Новый ЧтениеJSON;
//    ЧтениеЖсон.УстановитьСтроку(ОтветСервера);
//    СоответствиеИзJson = ПрочитатьJSON(ЧтениеЖсон, Истина);
//    
//    Дерево= новый ДеревоЗначений;
//    Дерево.Колонки.Добавить("Ключ");
//    Дерево.Колонки.Добавить("Значение");
//    Дерево.Колонки.Добавить("Тип");
//    ВерхнийУровеньдерева=Дерево.Строки.Добавить();
//    ВерхнийУровеньдерева.Ключ="Дерево JSON";    
//    СформироватьПодстрокиДерева(СоответствиеИзJson, ВерхнийУровеньдерева);
//    ЗначениеВРеквизитФормы(Дерево,"ДеревоЖсон");
//КонецПроцедуры

#КонецОбласти

#КонецОбласти

#КонецЕсли