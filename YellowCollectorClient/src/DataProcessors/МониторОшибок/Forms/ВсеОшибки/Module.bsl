#Область ОписаниеПеременных

&НаСервере
Перем МенеджерМонитора;    
      
&НаКлиенте
Перем ДокументБраузера; 
&НаКлиенте
Перем ОкноБраузера; 
&НаКлиенте
Перем РедакторJSON; 

#Конецобласти

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ПроверитьДоступностьСервераYellowColllector(Отказ);
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	ИнициализироватьФорму();	
	УстановитьВидимостьНаСервере();
	
КонецПроцедуры 

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	#Если НЕ ВебКлиент Тогда
	ИнициализироватьДетальнаяИнформацияHTML();
	#Иначе
	Элементы.ГруппаДетали.Видимость = Ложь;
	Элементы.Детали.Видимость = Ложь;
	#КонецЕсли
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ОбщийДокументПоВсемОшибкамПриАктивизации(Элемент)
	ПодключитьОбработчикОжидания("Подключаемый_ОбщийДокументПоВсемОшибкамПриАктивизации", 0.3, Истина);
КонецПроцедуры

&НаКлиенте
Процедура ОбщийДокументПоВсемОшибкамОбработкаРасшифровки(Элемент, Расшифровка, СтандартнаяОбработка, ДополнительныеПараметры)
	СтандартнаяОбработка = Ложь;
КонецПроцедуры   

&НаКлиенте
Процедура ДетальнаяИнформацияHTMLДокументСформирован(Элемент)
	
	ДокументБраузера = Элемент.Документ;
    ОкноБраузера = ДокументБраузера.parentWindow;     
	Если ОкноБраузера = Неопределено Тогда
        ОкноБраузера = ДокументБраузера.defaultView; 
    КонецЕсли;
	
	Если ОкноБраузера = Неопределено Тогда
		Возврат;		
	КонецЕсли;   
	
	РедакторJSON = ОкноБраузера.Init(ОтображениеДетальнойИнформации);
	НормализованныйJSON = ОкноБраузера.stringify(ДетальнаяИнформацияКакJSON);
	
	РедакторJSON.setText(НормализованныйJSON);

КонецПроцедуры

&НаКлиенте
Процедура ОтображениеДетальнойИнформацииПриИзменении(Элемент)
	РедакторJSON.setMode(ОтображениеДетальнойИнформации);
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Обновить(Команда)
	ОбновитьДанныеМонитора();
КонецПроцедуры

&НаКлиенте
Процедура Детали(Команда)
	
	Элементы.Детали.Пометка = НЕ Элементы.Детали.Пометка;
	ПодключитьОбработчикОжидания("Подключаемый_ОбщийДокументПоВсемОшибкамПриАктивизации", 0.5, Истина);

КонецПроцедуры

&НаКлиенте
Процедура ПометитьНаУдаление(Команда)
	
	ТекущаяОбласть = Элементы.ОбщийДокументПоВсемОшибкам.ТекущаяОбласть;  
	Если ТекущаяОбласть = Неопределено 
		ИЛИ ТекущаяОбласть.Расшифровка = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ПометитьНаУдалениеНаСервере(ТекущаяОбласть.Расшифровка);
		
	ПодключитьОбработчикОжидания("Подключаемый_ОбновитьДанныеМонитора", 1, Истина);

КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции 

#Область РаботаСФормой

&НаСервере
Процедура ИнициализироватьФорму()

	ИнициализироватьСхемыКомпоновки();
	ИнициализироватьКомпоновщикиНастроек(); 
	ИнициализироватьРежимОтображения();

КонецПроцедуры  

&НаСервере
Процедура ИнициализироватьРежимОтображения()
	ОтображениеДетальнойИнформации = "code";
КонецПроцедуры

&НаСервере
Процедура ИнициализироватьСхемыКомпоновки()
	
	ОбработкаОбъект = РеквизитФормыВЗначение("Объект");
	ОбработкаОбъект.ПодготовитьМониторКРаботеПриНеобходимости(ПараметрыМонитораДляПодготовки());
	
	ЗначениеВРеквизитФормы(ОбработкаОбъект, "Объект");
	
КонецПроцедуры

&НаСервере
Процедура ИнициализироватьКомпоновщикиНастроек()
	
	КомпоновщикНастроекОбщийДокумент
	   .Инициализировать(Новый ИсточникДоступныхНастроекКомпоновкиДанных(Объект.АдресСхемы));
	КомпоновщикНастроекОбщийДокумент
	   .ЗагрузитьНастройки(ПолучитьИзВременногоХранилища(Объект.АдресСхемы).НастройкиПоУмолчанию); 
	   
	   
	КомпоновщикНастроекОбщаяСтатистикаПоОшибкам
	   .Инициализировать(Новый ИсточникДоступныхНастроекКомпоновкиДанных(Объект.АдресСхемыСтатистикаПоВсемОшибкам));
	КомпоновщикНастроекОбщаяСтатистикаПоОшибкам
	   .ЗагрузитьНастройки(ПолучитьИзВременногоХранилища(Объект.АдресСхемыСтатистикаПоВсемОшибкам).НастройкиПоУмолчанию);

КонецПроцедуры

&НаСервере
Процедура УстановитьВидимостьНаСервере()
	УстановитьВидимостьОбластиДеталейОшибокНаСервере();
КонецПроцедуры

#КонецОбласти

#Область ПроверкаДоступности

&НаСервере
Процедура ПроверитьДоступностьСервераYellowColllector(Отказ)
	
	Если НЕ YellowCollectorЗапросы.СерверДоступен() Тогда
	
		Отказ = Истина;
		ОбщегоНазначения
		     .СообщитьПользователю(НСтр("ru='Не удалось установить соединение с сервером ""Yellow Collector""'"));
	
	КонецЕсли;
		
КонецПроцедуры

#КонецОбласти

#Область ОтображениеДеталейОшибок

&НаКлиенте
Процедура ИнициализироватьДетальнаяИнформацияHTML()
	
	ОбратныйВызов = Новый ОписаниеОповещения("ИнициализироватьДетальнаяИнформацияHTMLЗавершение",
	                                         ЭтотОбъект);
	
	ФайловаяСистемаКлиент.СоздатьВременныйКаталог(ОбратныйВызов);
	
	
КонецПроцедуры

&НаКлиенте
Процедура ИнициализироватьДетальнаяИнформацияHTMLЗавершение(ИмяКаталога, ДополнительныеПараметры) Экспорт
	
	#Если НЕ ВебКлиент Тогда
	
	Чтение = Новый ЧтениеДанных(ДвоичныеДанныеJSONEditor());	
	Файл = Новый ЧтениеZipФайла(Чтение.ИсходныйПоток());
	Файл.ИзвлечьВсе(ИмяКаталога);
			
	ДетальнаяИнформацияHTML = ИмяКаталога 
					          + ПолучитьРазделительПути() 
							  + "jsoneditor" 
							  + ПолучитьРазделительПути() 
							  + "index.html";
	
	#КонецЕсли

КонецПроцедуры

&НаСервереБезКонтекста
Функция ДвоичныеДанныеJSONEditor()
	Возврат Обработки.JSONEditor.ПолучитьМакет("Бинарник");	
КонецФункции

//@skip-check module-empty-method    
&НаКлиенте
Процедура Подключаемый_ОбщийДокументПоВсемОшибкамПриАктивизации()
	
	#Если НЕ ВебКлиент Тогда
		
	УстановитьВидимостьОбластиДеталейОшибокНаКлиенте();
	УстановитьЗаголовокКнопкиДеталиОшибок();
	Если ОтображатьДетальнуюИнформацию() Тогда
		ЗаполнитьДетальнуюИнформациюНаКлиенте();
		Если НЕ РедакторJSON = Неопределено Тогда 
			ДетальнаяИнформацияКакJSON = ОкноБраузера.stringify(ДетальнаяИнформацияКакJSON);
			РедакторJSON.setText(ДетальнаяИнформацияКакJSON);			
		КонецЕсли;
	Иначе 
		ДетальнаяИнформацияКакJSON = "";
	КонецЕсли;
	
	#КонецЕсли
	
КонецПроцедуры

&НаКлиенте
Функция ОтображатьДетальнуюИнформацию()
	Возврат Элементы.Детали.Пометка;
КонецФункции

&НаКлиенте
Процедура УстановитьЗаголовокКнопкиДеталиОшибок()
	
	Если ОтображатьДетальнуюИнформацию() Тогда
		Элементы.Детали.Заголовок = НСтр("ru='Скрыть детали'");
	Иначе
		Элементы.Детали.Заголовок = НСтр("ru='Показать детали'");
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура УстановитьВидимостьОбластиДеталейОшибокНаКлиенте()
	Элементы.ГруппаДетали.Видимость = ОтображатьДетальнуюИнформацию();	
КонецПроцедуры

&НаСервере
Процедура УстановитьВидимостьОбластиДеталейОшибокНаСервере()
	Элементы.ГруппаДетали.Видимость = Элементы.Детали.Пометка;	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьДетальнуюИнформациюНаКлиенте()

	ТекущаяОбластьДокумента = Элементы.ОбщийДокументПоВсемОшибкам.ТекущаяОбласть;
	Если ТекущаяОбластьДокумента = Неопределено 
	     ИЛИ ТекущаяОбластьДокумента.Расшифровка = Неопределено Тогда	
		Возврат;
	КонецЕсли;
	
	ЗаполнитьДетальнуюИнформациюОбОшибкеНаСервере(ТекущаяОбластьДокумента.Расшифровка);
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьДетальнуюИнформациюОбОшибкеНаСервере(Расшифровка)
	
	Перем ИДОтчетаОбОшибке, ДетальнаяИнформация;
	
	ДанныеРасшифровки = ПолучитьИзВременногоХранилища(Объект.АдресДанныхРасшифровки);
	Если НЕ Тип("ДанныеРасшифровкиКомпоновкиДанных") = ТипЗнч(ДанныеРасшифровки) Тогда
		Возврат;
	КонецЕсли;
	
	ЭлементРасшифровки = ДанныеРасшифровки.Элементы.Получить(Расшифровка);
	Если НЕ Тип("ЭлементРасшифровкиКомпоновкиДанныхПоля") = ТипЗнч(ЭлементРасшифровки) Тогда
	    Возврат;
	КонецЕсли;
	
	ПоляРасшифровки = ЭлементРасшифровки.ПолучитьПоля();
	Для Каждого ПолеРасшифровки Из ПоляРасшифровки Цикл
		Если ПолеРасшифровки.Поле = "ИД" Тогда
			ИДОтчетаОбОшибке = ПолеРасшифровки.Значение;
			Прервать;
		КонецЕсли;
	КонецЦикла;
	
	Если ЗначениеЗаполнено(ИДОтчетаОбОшибке) Тогда
		ДетальнаяИнформацияКакJSON = 
		       ПреобразоватьВСтрокуJSON(МенеджерМонитора.ПолучитьДетальнуюИнформациюОтчетаОбОшибке(ИДОтчетаОбошибке));     
	Иначе 
		ДетальнаяИнформацияКакJSON = "";
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция ПреобразоватьВСтрокуJSON(СтруктураИлиСоотвествие)
	
	ПисательJSON = Новый ЗаписьJSON;
	ПисательJSON.УстановитьСтроку();
	
	ЗаписатьJSON(ПисательJSON, СтруктураИлиСоотвествие);
	
	Возврат ПисательJSON.Закрыть();
	
КонецФункции

#КонецОбласти

#Область ОбновлениеДанныхМонитора 

&НаСервере
Процедура ОбновитьДанныеМонитора()
	
	МониторОбъект = РеквизитФормыВЗначение("Объект");
	ДанныеМонитора = МониторОбъект.ПолучитьДанныеМонитораИзКоллектора(ПараметрыМонитораДляОбновления());
	
	ДанныеМонитора.Свойство("ДокументПоВсемОшибкам", ОбщийДокументПоВсемОшибкам);
	ДанныеМонитора.Свойство("ДокументСтатистикаПоВсемОшибкам", ДокументСтатистикаПоВсемОшибкам);
		
КонецПроцедуры

#Область ПараметрыМонитора

&НаСервере
Функция ПараметрыМонитораДляПодготовки()
	
	ПараметрыМонитора = ОбщиеПараметрыПараметрыМонитора();
	
	Возврат ОбщегоНазначения.ФиксированныеДанные(ПараметрыМонитора);
	
КонецФункции 

&НаСервере
Функция ПараметрыМонитораДляОбновления()
	
	ОбщиеПараметры = ОбщиеПараметрыПараметрыМонитора();
	
	ОбщиеПараметры.Вставить("НастройкиСКДДляДокументаПоВсемОшибкамСтрока", 
	                         ПоместитьВоВременноеХранилище(КомпоновщикНастроекОбщийДокумент.ПолучитьНастройки(),
	                                                       УникальныйИдентификатор));    
														   
	ОбщиеПараметры.Вставить("НастройкиСКДДляДокументаОбщаяяСтатистикаОшибок", 
	                         ПоместитьВоВременноеХранилище(КомпоновщикНастроекОбщаяСтатистикаПоОшибкам.ПолучитьНастройки(),
	                                                       УникальныйИдентификатор));

	
	Возврат ОбщегоНазначения.ФиксированныеДанные(ОбщиеПараметры);
	
КонецФункции

#КонецОбласти

&НаСервере
Функция ОбщиеПараметрыПараметрыМонитора()

	ПараметрыОбновления = Новый Структура;
	ПараметрыОбновления.Вставить("УИДДляВременногоХранилищаАдресаСхемы", УникальныйИдентификатор);
	ПараметрыОбновления.Вставить("УИДДляВременногоХранилищаАдресаДанныхРасшифровки", УникальныйИдентификатор);
	
	Возврат ПараметрыОбновления;
	
КонецФункции

#КонецОбласти

&НаКлиенте
Процедура Подключаемый_ОбновитьДанныеМонитора()
	ОбновитьДанныеМонитора();
КонецПроцедуры

&НаСервере
Процедура ПометитьНаУдалениеНаСервере(Расшифровка)
	
	Перем ИДОтчетаОбОшибке;
	
	ДанныеРасшифровки = ПолучитьИзВременногоХранилища(Объект.АдресДанныхРасшифровки);
	Если НЕ Тип("ДанныеРасшифровкиКомпоновкиДанных") = ТипЗнч(ДанныеРасшифровки) Тогда
		Возврат;
	КонецЕсли;
	
	ЭлементРасшифровки = ДанныеРасшифровки.Элементы.Получить(Расшифровка);
	Если НЕ Тип("ЭлементРасшифровкиКомпоновкиДанныхПоля") = ТипЗнч(ЭлементРасшифровки) Тогда
		Возврат;
	КонецЕсли;
	
	ПоляРасшифровки = ЭлементРасшифровки.ПолучитьПоля();
	Для Каждого ПолеРасшифровки Из ПоляРасшифровки Цикл
		Если ПолеРасшифровки.Поле = "ИД" Тогда
			ИДОтчетаОбОшибке = ПолеРасшифровки.Значение;
			Прервать;
		КонецЕсли;
	КонецЦикла;      
	
	Если ИДОтчетаОбОшибке = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Обработки
	   .МониторОшибок
	   .ПометитьНаУдалениеЗаголовокОтчетаПоИД(ИДОтчетаОбОшибке);
	   	
КонецПроцедуры

#КонецОбласти

#Область Инициализация

#Если Сервер Тогда
МенеджерМонитора = Обработки.МониторОшибок;
#КонецЕсли

#Конецобласти




